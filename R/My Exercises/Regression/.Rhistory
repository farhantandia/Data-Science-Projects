df_raw<-read.csv("C:/Users/farha/Documents/GitHub/Data Science Projects/R/Data Files/Decision Tree Dataset/Movie_Regression.csv")
summary(df)
summary(df_raw)
View(df_raw)
df<-df_raw
### DATA PREPROCESSING ###
df$Time_taken[is.na(df$Time_taken)]<- mean(df$Time_taken,na.rm = TRUE)
summary(df_raw)
library(caTools)
set.seed(0)
split=sample.split(movie,SplitRatio = 0.8)
train = subset(movie, split==TRUE)
set.seed(0)
split=sample.split(df,SplitRatio = 0.8)
train = subset(df, split==TRUE)
test = subset(df, split==FALSE)
library(rpart.plot)
detach("package:rpart", unload = TRUE)
library(rpart, lib.loc = "C:/Program Files/R/R-4.0.3/library")
View(df)
#run regression tree model on train set
regtree <-rpart(formula = Collection~., data = train, control = rpart.control(maxdepth = 3))
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = -3)
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = 0)
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = -2)
#Predict value at any point
test$pred <- predict(regtree, test, type = 'vector')
MSE2<-mean((test$pred -test$Collection)^2)
View(test)
#run regression tree model on train set
regtree <-rpart(formula = Collection~., data = train, control = rpart.control(maxdepth = 5))
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = -2)
#Predict value at any point
test$pred <- predict(regtree, test, type = 'vector')
MSE2<-mean((test$pred -test$Collection)^2)
#run regression tree model on train set
regtree <-rpart(formula = Collection~., data = train, control = rpart.control(maxdepth = 50))
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = -2)
#Predict value at any point
test$pred <- predict(regtree, test, type = 'vector')
MSE2<-mean((test$pred -test$Collection)^2)
#run regression tree model on train set
regtree <-rpart(formula = Collection~., data = train, control = rpart.control(maxdepth = 10))
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = -2)
#Predict value at any point
test$pred <- predict(regtree, test, type = 'vector')
MSE2<-mean((test$pred -test$Collection)^2)
#run regression tree model on train set
regtree <-rpart(formula = Collection~., data = train, control = rpart.control(maxdepth = 5))
#plot decision tree
rpart.plot(regtree, box.palette = "RdBu", digits = -2)
#Predict value at any point
test$pred <- predict(regtree, test, type = 'vector')
MSE2<-mean((test$pred -test$Collection)^2)
rpart.plot(fulltree, digits = -3)
rpart.plot(fulltree, digits = -3)
### Decision Tree with Pruning ###
fulltree <- rpart(formula = Collection~., data = train, control = rpart.control(cp=0))
rpart.plot(fulltree, digits = -3)
rpart.plot(fulltree,box.palette = "RdBu", digits = -3)
print(fulltree)
printcp(fulltree)
plotcp(regtree)
mincp <- regtree$cptable[which.min(regtree$cptable[,"xerror"]),"CP"]
prunedtree <- prune(fulltree, cp=mincp)
rpart.plot(prunedtree, box.palette = "RdBu", digits = -3)
test$fulltree <- predict(fulltree, test,type = 'vector')
View(fulltree)
View(fulltree)
View(test)
MSE2full <-mean((test$fulltree - test$Collection)^2)
test$pruned<- predict(prunedtree, test,type = 'vector')
MSE2pruned <-mean((test$pruned - test$Collection)^2)
accuracy_postprun <- mean(test$pred == test$left)
accuracy_postprun <- mean(test$pred == test$pruned)
